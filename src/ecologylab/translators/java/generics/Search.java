package ecologylab.translators.java.generics;

/**
 * Automatically generated by JavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2012) Interface Ecology Lab.
 */

import ecologylab.serialization.ElementState;
import ecologylab.serialization.annotations.Hint;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_hints;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;
import ecologylab.translators.java.generics.SearchResult;
import java.lang.String;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class Search<T extends SearchResult> extends ElementState
{
	@simpl_scalar
	@simpl_hints({Hint.XML_ATTRIBUTE})
	private String query;

	@simpl_collection("search_result")
	private List<T> searchResults;

	public Search()
	{ super(); }

	public String getQuery()
	{
		return query;
	}

	public void setQuery(String query)
	{
		this.query = query;
	}

	public List<T> getSearchResults()
	{
		return searchResults;
	}

  // lazy evaluation:
  public List<T> searchResults()
  {
    if (searchResults == null)
      searchResults = new ArrayList<T>();
    return searchResults;
  }

  // addTo:
  public void addToSearchResults(T element)
  {
    searchResults().add(element);
  }

  // size:
  public int searchResultsSize()
  {
    return searchResults == null ? 0 : searchResults.size();
  }

	public void setSearchResults(List<T> searchResults)
	{
		this.searchResults = searchResults;
	}
}
